[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Celery",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "Error",
        "importPath": "uu",
        "description": "uu",
        "isExtraImport": true,
        "detail": "uu",
        "documentation": {}
    },
    {
        "label": "Error",
        "importPath": "uu",
        "description": "uu",
        "isExtraImport": true,
        "detail": "uu",
        "documentation": {}
    },
    {
        "label": "user.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "user.models",
        "description": "user.models",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "NotificationContent",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "AccessToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenBlacklistView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "RedirectView",
        "importPath": "django.views.generic.base",
        "description": "django.views.generic.base",
        "isExtraImport": true,
        "detail": "django.views.generic.base",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "image.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "image.models",
        "description": "image.models",
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "image.models",
        "description": "image.models",
        "isExtraImport": true,
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "image.models",
        "description": "image.models",
        "isExtraImport": true,
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "image.models",
        "description": "image.models",
        "isExtraImport": true,
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "image.models",
        "description": "image.models",
        "isExtraImport": true,
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "image.models",
        "description": "image.models",
        "isExtraImport": true,
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "image.models",
        "description": "image.models",
        "isExtraImport": true,
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "deconstructible",
        "importPath": "django.utils.deconstruct",
        "description": "django.utils.deconstruct",
        "isExtraImport": true,
        "detail": "django.utils.deconstruct",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "APIException",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "APIException",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "NotFound",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "APIException",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "APIException",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "NotFound",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "ecommerce",
        "description": "ecommerce",
        "isExtraImport": true,
        "detail": "ecommerce",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "ecommerce",
        "description": "ecommerce",
        "isExtraImport": true,
        "detail": "ecommerce",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "ecommerce",
        "description": "ecommerce",
        "isExtraImport": true,
        "detail": "ecommerce",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "ecommerce",
        "description": "ecommerce",
        "isExtraImport": true,
        "detail": "ecommerce",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "ecommerce",
        "description": "ecommerce",
        "isExtraImport": true,
        "detail": "ecommerce",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "ecommerce",
        "description": "ecommerce",
        "isExtraImport": true,
        "detail": "ecommerce",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "get_current_timezone",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "get_current_timezone",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ReadOnlyModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ReadOnlyModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "IsStaffOrAdmin",
        "importPath": "user.permissions",
        "description": "user.permissions",
        "isExtraImport": true,
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "IsActiveUser",
        "importPath": "user.permissions",
        "description": "user.permissions",
        "isExtraImport": true,
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "user.permissions",
        "description": "user.permissions",
        "isExtraImport": true,
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "StandardPageNumberPagination",
        "importPath": "ecommerce.pagination",
        "description": "ecommerce.pagination",
        "isExtraImport": true,
        "detail": "ecommerce.pagination",
        "documentation": {}
    },
    {
        "label": "StandardPageNumberPagination",
        "importPath": "ecommerce.pagination",
        "description": "ecommerce.pagination",
        "isExtraImport": true,
        "detail": "ecommerce.pagination",
        "documentation": {}
    },
    {
        "label": "StandardPageNumberPagination",
        "importPath": "ecommerce.pagination",
        "description": "ecommerce.pagination",
        "isExtraImport": true,
        "detail": "ecommerce.pagination",
        "documentation": {}
    },
    {
        "label": "MultiPartParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "FormParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "JSONParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "inventory.models.campaign",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "inventory.models.campaign",
        "description": "inventory.models.campaign",
        "detail": "inventory.models.campaign",
        "documentation": {}
    },
    {
        "label": "inventory.models.promotion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "inventory.models.promotion",
        "description": "inventory.models.promotion",
        "detail": "inventory.models.promotion",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "db",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Agency",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Agency",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "ProductItem",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "setting_changed",
        "importPath": "django.core.signals",
        "description": "django.core.signals",
        "isExtraImport": true,
        "detail": "django.core.signals",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "require",
        "importPath": "pkg_resources",
        "description": "pkg_resources",
        "isExtraImport": true,
        "detail": "pkg_resources",
        "documentation": {}
    },
    {
        "label": "stripe",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "stripe",
        "description": "stripe",
        "detail": "stripe",
        "documentation": {}
    },
    {
        "label": "Or",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "result",
        "importPath": "unittest",
        "description": "unittest",
        "isExtraImport": true,
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "OrderFilter",
        "importPath": "inventory.filters",
        "description": "inventory.filters",
        "isExtraImport": true,
        "detail": "inventory.filters",
        "documentation": {}
    },
    {
        "label": "ProductFilter",
        "importPath": "inventory.filters",
        "description": "inventory.filters",
        "isExtraImport": true,
        "detail": "inventory.filters",
        "documentation": {}
    },
    {
        "label": "ReviewFilter",
        "importPath": "inventory.filters",
        "description": "inventory.filters",
        "isExtraImport": true,
        "detail": "inventory.filters",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "SearchFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "OrderingFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "user",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "user",
        "description": "user",
        "detail": "user",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "django.core.files",
        "description": "django.core.files",
        "isExtraImport": true,
        "detail": "django.core.files",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "django.core.files",
        "description": "django.core.files",
        "isExtraImport": true,
        "detail": "django.core.files",
        "documentation": {}
    },
    {
        "label": "Clothes",
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "isExtraImport": true,
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "Shoes",
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "isExtraImport": true,
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "ProductItem",
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "isExtraImport": true,
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "isExtraImport": true,
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "urljoin",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "os,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.",
        "description": "os.",
        "detail": "os.",
        "documentation": {}
    },
    {
        "label": "Agency",
        "importPath": "inventory.models.agency",
        "description": "inventory.models.agency",
        "isExtraImport": true,
        "detail": "inventory.models.agency",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "helpers",
        "importPath": "django.contrib.admin",
        "description": "django.contrib.admin",
        "isExtraImport": true,
        "detail": "django.contrib.admin",
        "documentation": {}
    },
    {
        "label": "Notification",
        "importPath": "user.models.notification",
        "description": "user.models.notification",
        "isExtraImport": true,
        "detail": "user.models.notification",
        "documentation": {}
    },
    {
        "label": "NotificationContent",
        "importPath": "user.models.notification",
        "description": "user.models.notification",
        "isExtraImport": true,
        "detail": "user.models.notification",
        "documentation": {}
    },
    {
        "label": "FilteredSelectMultiple",
        "importPath": "django.contrib.admin.widgets",
        "description": "django.contrib.admin.widgets",
        "isExtraImport": true,
        "detail": "django.contrib.admin.widgets",
        "documentation": {}
    },
    {
        "label": "FilteredSelectMultiple",
        "importPath": "django.contrib.admin.widgets",
        "description": "django.contrib.admin.widgets",
        "isExtraImport": true,
        "detail": "django.contrib.admin.widgets",
        "documentation": {}
    },
    {
        "label": "Statistical",
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "isExtraImport": true,
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "DjangoJSONEncoder",
        "importPath": "django.core.serializers.json",
        "description": "django.core.serializers.json",
        "isExtraImport": true,
        "detail": "django.core.serializers.json",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Permission",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecommerce.asgi",
        "description": "ecommerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "ecommerce.asgi",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "ecommerce.celery",
        "description": "ecommerce.celery",
        "peekOfCode": "app = Celery('ecommerce')\napp.config_from_object('django.conf:settings', namespace='CELERY')\n# app.autodiscover_tasks()\napp.autodiscover_tasks(['statistical'])",
        "detail": "ecommerce.celery",
        "documentation": {}
    },
    {
        "label": "CustomerMiddleware",
        "kind": 6,
        "importPath": "ecommerce.middleware",
        "description": "ecommerce.middleware",
        "peekOfCode": "class CustomerMiddleware(object):\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        try: \n            token = request.headers.get('authorization')[7:]\n            obj = AccessToken(token)\n            user_id = obj.payload['user_id']\n            customer = Customer.objects.get(user__id=user_id)\n            request.customer = customer",
        "detail": "ecommerce.middleware",
        "documentation": {}
    },
    {
        "label": "StandardPageNumberPagination",
        "kind": 6,
        "importPath": "ecommerce.pagination",
        "description": "ecommerce.pagination",
        "peekOfCode": "class StandardPageNumberPagination(PageNumberPagination):\n    page_size = DEFAULT_PAGE_SIZE  # Default page size\n    page_size_query_param = \"page_size\"  # Query parameter for page size\n    def get_page_size(self, request):\n        page_size = request.query_params.get(self.page_size_query_param)\n        if page_size is None:\n            return int(self.page_size)\n        return int(page_size)\n    def get_paginated_response(self, data):\n        return Response(",
        "detail": "ecommerce.pagination",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PAGE_SIZE",
        "kind": 5,
        "importPath": "ecommerce.pagination",
        "description": "ecommerce.pagination",
        "peekOfCode": "DEFAULT_PAGE_SIZE = 32\nclass StandardPageNumberPagination(PageNumberPagination):\n    page_size = DEFAULT_PAGE_SIZE  # Default page size\n    page_size_query_param = \"page_size\"  # Query parameter for page size\n    def get_page_size(self, request):\n        page_size = request.query_params.get(self.page_size_query_param)\n        if page_size is None:\n            return int(self.page_size)\n        return int(page_size)\n    def get_paginated_response(self, data):",
        "detail": "ecommerce.pagination",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-6j*2@_u%t46c+w$=#ivh%x8a@wzdb*d(f=rli653zr@b-ede#0\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-6j*2@_u%t46c+w$=#ivh%x8a@wzdb*d(f=rli653zr@b-ede#0\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\nCORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django_celery_beat\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django_celery_beat\",\n    \"celery\",\n    \"rest_framework\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "ROOT_URLCONF = \"ecommerce.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / 'templates'],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / 'templates'],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "WSGI_APPLICATION = \"ecommerce.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\n# Password validation",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": os.environ.get(\"POSTGRES_DB\"),\n        \"USER\": os.environ.get(\"POSTGRES_USER\"),\n        \"PASSWORD\": os.environ.get(\"POSTGRES_PASSWORD\"),\n        \"HOST\": os.environ.get(\"POSTGRES_HOST\"),\n        \"PORT\": os.environ.get(\"PORT\"),\n    }\n}",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = (\"django.contrib.auth.backends.ModelBackend\",)\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=5),\n    \"ROTATE_REFRESH_TOKENS\": False,\n    \"BLACKLIST_AFTER_ROTATION\": False,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"VERIFYING_KEY\": \"\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=5),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=5),\n    \"ROTATE_REFRESH_TOKENS\": False,\n    \"BLACKLIST_AFTER_ROTATION\": False,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"VERIFYING_KEY\": \"\",\n    \"AUDIENCE\": None,",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"SEARCH_PARAM\": \"keyword\",\n    \"DEFAULT_PERMISSION_CLASSES\": (\"rest_framework.permissions.IsAuthenticated\",),\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework_simplejwt.authentication.JWTStatelessUserAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",\n        \"rest_framework.authentication.BasicAuthentication\",\n    ),\n    \"DEFAULT_FILTER_BACKENDS\": [\"django_filters.rest_framework.DjangoFilterBackend\"],",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"user.User\"\nSOCIAL_AUTH_USER_MODEL = \"user.User\"\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\nLANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"Asia/Ho_Chi_Minh\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "SOCIAL_AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "SOCIAL_AUTH_USER_MODEL = \"user.User\"\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\nLANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"Asia/Ho_Chi_Minh\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"Asia/Ho_Chi_Minh\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "TIME_ZONE = \"Asia/Ho_Chi_Minh\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\n# STATIC_ROOT = os.path.join(BASE_DIR, 'static/')\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nLOGGING = {\n    \"version\": 1,",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nLOGGING = {\n    \"version\": 1,\n    \"disable_existing_loggers\": False,\n    \"handlers\": {",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nLOGGING = {\n    \"version\": 1,\n    \"disable_existing_loggers\": False,\n    \"handlers\": {\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n        },\n    },\n    \"loggers\": {",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "LOGGING",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "LOGGING = {\n    \"version\": 1,\n    \"disable_existing_loggers\": False,\n    \"handlers\": {\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n        },\n    },\n    \"loggers\": {\n        \"celery\": {",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "REDIS_HOST",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "REDIS_HOST = os.environ.get(\"REDIS_HOST\")\nREDIS_PORT = os.environ.get(\"REDIS_PORT\")\nREDIS_DB = os.environ.get(\"REDIS_DB\")\nCELERY_BROKER_URL = f\"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}\"\nCELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True\nCELERY_IMPORTS = (\"statistical.tasks\",)\nSTRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "REDIS_PORT",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "REDIS_PORT = os.environ.get(\"REDIS_PORT\")\nREDIS_DB = os.environ.get(\"REDIS_DB\")\nCELERY_BROKER_URL = f\"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}\"\nCELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True\nCELERY_IMPORTS = (\"statistical.tasks\",)\nSTRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "REDIS_DB",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "REDIS_DB = os.environ.get(\"REDIS_DB\")\nCELERY_BROKER_URL = f\"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}\"\nCELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True\nCELERY_IMPORTS = (\"statistical.tasks\",)\nSTRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_BROKER_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "CELERY_BROKER_URL = f\"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}\"\nCELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True\nCELERY_IMPORTS = (\"statistical.tasks\",)\nSTRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True\nCELERY_IMPORTS = (\"statistical.tasks\",)\nSTRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_IMPORTS",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "CELERY_IMPORTS = (\"statistical.tasks\",)\nSTRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "STRIPE_SECRET",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "STRIPE_SECRET = os.environ.get(\"STRIPE_SECRET\")\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nAWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AWS_ACCESS_KEY_ID = os.environ.get(\"AWS_ACCESS_KEY_ID\")\nAWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SECRET_ACCESS_KEY",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AWS_SECRET_ACCESS_KEY = os.environ.get(\"AWS_SECRET_ACCESS_KEY\")\nAWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_ENDPOINT_URL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AWS_S3_ENDPOINT_URL = os.environ.get(\"AWS_S3_ENDPOINT_URL\")\nAWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AWS_STORAGE_BUCKET_NAME",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AWS_STORAGE_BUCKET_NAME = os.environ.get(\"AWS_STORAGE_BUCKET_NAME\")\nAWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_REGION_NAME",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AWS_S3_REGION_NAME = os.environ.get(\"AWS_S3_REGION_NAME\")\nAWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_USE_SSL",
        "kind": 5,
        "importPath": "ecommerce.settings",
        "description": "ecommerce.settings",
        "peekOfCode": "AWS_S3_USE_SSL = False",
        "detail": "ecommerce.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "schema_view = get_schema_view(\n    openapi.Info(\n        title=\"E-commerce\",\n        default_version='v1',\n        description=\"\",\n        terms_of_service=\"\",\n    ),\n    public=True,\n)\nURL_PREFIX = f\"{os.getenv('URL_PREFIX', 'backend')}/\"",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "URL_PREFIX",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "URL_PREFIX = f\"{os.getenv('URL_PREFIX', 'backend')}/\"\napi_patterns = [\n    re_path(r'^$', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    re_path(r'^redoc/$', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n    path('token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('token/blacklist/', TokenBlacklistView.as_view(), name='token_blacklist'),\n    path('', include('user.urls')),\n    path('', include('image.urls')),\n    path('', include('inventory.urls')),",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "api_patterns",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "api_patterns = [\n    re_path(r'^$', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    re_path(r'^redoc/$', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n    path('token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('token/blacklist/', TokenBlacklistView.as_view(), name='token_blacklist'),\n    path('', include('user.urls')),\n    path('', include('image.urls')),\n    path('', include('inventory.urls')),\n]",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "urlpatterns = [\n    path('', RedirectView.as_view(url='admin/', permanent=True)),\n    path('admin/', admin.site.urls),\n    path(f'{URL_PREFIX}api/', include(api_patterns)),\n] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\nadmin.site.site_header = \"Stride Administration\"\nadmin.site.site_title = \"Stride Admin\"\nadmin.site.index_title = \"Store Management\"",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "admin.site.site_header = \"Stride Administration\"\nadmin.site.site_title = \"Stride Admin\"\nadmin.site.index_title = \"Store Management\"",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "admin.site.site_title = \"Stride Admin\"\nadmin.site.index_title = \"Store Management\"",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "ecommerce.urls",
        "description": "ecommerce.urls",
        "peekOfCode": "admin.site.index_title = \"Store Management\"",
        "detail": "ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "ecommerce.wsgi",
        "description": "ecommerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "ecommerce.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "image.migrations.0001_initial",
        "description": "image.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Image',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('image', models.FileField(upload_to='static/')),",
        "detail": "image.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "image.migrations.0002_alter_image_image",
        "description": "image.migrations.0002_alter_image_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('image', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='image',\n            field=models.ImageField(upload_to='static/'),\n        ),",
        "detail": "image.migrations.0002_alter_image_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "image.migrations.0003_alter_image_image",
        "description": "image.migrations.0003_alter_image_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('image', '0002_alter_image_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='image',\n            field=models.ImageField(upload_to=image.models.RenameImage('static/')),\n        ),",
        "detail": "image.migrations.0003_alter_image_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "image.migrations.0004_alter_image_table",
        "description": "image.migrations.0004_alter_image_table",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('image', '0003_alter_image_image'),\n    ]\n    operations = [\n        migrations.AlterModelTable(\n            name='image',\n            table='image',\n        ),\n    ]",
        "detail": "image.migrations.0004_alter_image_table",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "image.migrations.0005_alter_image_image",
        "description": "image.migrations.0005_alter_image_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('image', '0004_alter_image_table'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='image',\n            field=models.ImageField(upload_to=image.models.RenameImage('')),\n        ),",
        "detail": "image.migrations.0005_alter_image_image",
        "documentation": {}
    },
    {
        "label": "ImageConfig",
        "kind": 6,
        "importPath": "image.apps",
        "description": "image.apps",
        "peekOfCode": "class ImageConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'image'",
        "detail": "image.apps",
        "documentation": {}
    },
    {
        "label": "RenameImage",
        "kind": 6,
        "importPath": "image.models",
        "description": "image.models",
        "peekOfCode": "class RenameImage(object):\n    def __init__(self, path):\n        self.path = path\n    def __call__(self, instance, filename):\n        ext = filename.split('.')[-1]\n        if instance.id:\n            filename = '{}.{}'.format(instance.id, ext)\n        else:\n            filename = '{}.{}'.format(uuid.uuid4(), ext)\n        return os.path.join(self.path, filename)",
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "kind": 6,
        "importPath": "image.models",
        "description": "image.models",
        "peekOfCode": "class Image(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    image = models.ImageField(upload_to=RenameImage(\"\"), blank=False, null=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def delete(self, *args, **kwargs):\n        self.image.delete(save=False)\n        super().delete(*args, **kwargs)\n    class Meta:\n        db_table = \"image\"",
        "detail": "image.models",
        "documentation": {}
    },
    {
        "label": "ImageSerializer",
        "kind": 6,
        "importPath": "image.serializers",
        "description": "image.serializers",
        "peekOfCode": "class ImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Image\n        fields = ['id', 'image', 'created_at']\n    def update(self, instance, validated_data):\n        instance.image.delete(save=False)  # Delete the old image\n        instance.image = validated_data.get('image', instance.image)\n        instance.save()\n        return instance",
        "detail": "image.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "image.urls",
        "description": "image.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r\"images\", ImageViewSet, basename=\"images\")\nurlpatterns = [\n    path(\"\", include(router.urls))\n]",
        "detail": "image.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "image.urls",
        "description": "image.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(router.urls))\n]",
        "detail": "image.urls",
        "documentation": {}
    },
    {
        "label": "ImageViewSet",
        "kind": 6,
        "importPath": "image.views",
        "description": "image.views",
        "peekOfCode": "class ImageViewSet(ModelViewSet):\n    permission_classes = [IsActiveUser]\n    parser_classes = (MultiPartParser,)\n    serializer_class = ImageSerializer\n    pagination_class = StandardPageNumberPagination\n    queryset = Image.objects.all()",
        "detail": "image.views",
        "documentation": {}
    },
    {
        "label": "AgencyAdmin",
        "kind": 6,
        "importPath": "inventory.admin.agency_admin",
        "description": "inventory.admin.agency_admin",
        "peekOfCode": "class AgencyAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (\n            \"Total\",\n            {\n                \"fields\": (\n                    (\n                        \"total\",\n                        \"buyed_total\",\n                        \"ship_total\",",
        "detail": "inventory.admin.agency_admin",
        "documentation": {}
    },
    {
        "label": "CampaignAdmin",
        "kind": 6,
        "importPath": "inventory.admin.campaign_admin",
        "description": "inventory.admin.campaign_admin",
        "peekOfCode": "class CampaignAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (\n            \"Total\",\n            {\n                \"fields\": (\n                    (\n                        \"buyed_total\",\n                        \"ship_total\",\n                        \"pending_total\",",
        "detail": "inventory.admin.campaign_admin",
        "documentation": {}
    },
    {
        "label": "OrderProductInline",
        "kind": 6,
        "importPath": "inventory.admin.order_admin",
        "description": "inventory.admin.order_admin",
        "peekOfCode": "class OrderProductInline(admin.TabularInline):\n    model = OrderProduct\n    fields = (\n        \"productItem\",\n        \"image\",\n        \"quantity\",\n    )\n    readonly_fields = (\"image\",)\n    extra = 1\n    def image(self, obj):",
        "detail": "inventory.admin.order_admin",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "inventory.admin.order_admin",
        "description": "inventory.admin.order_admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    inlines = [OrderProductInline]\n    fieldsets = (\n        (\"Order\", {\"fields\": (\"customer\", \"total_price\", \"status\", \"payment_done\")}),\n        (\"TimeBase\", {\"fields\": ((\"created_at\", \"updated_at\"),)}),\n    )\n    readonly_fields = (\"created_at\", \"updated_at\")\n    list_display = (\n        \"receiver\",\n        \"phone\",",
        "detail": "inventory.admin.order_admin",
        "documentation": {}
    },
    {
        "label": "ProductImageInline",
        "kind": 6,
        "importPath": "inventory.admin.product_admin",
        "description": "inventory.admin.product_admin",
        "peekOfCode": "class ProductImageInline(admin.TabularInline):\n    model = ProductImage\n    fields = (\"image\", \"image_preview\", \"primary\")\n    readonly_fields = (\"image_preview\",)\n    extra = 1\n    def image_preview(self, obj):\n        if obj.image:\n            return format_html(\n                '<img src=\"{}\" width=\"150\" height=\"auto\"/>',\n                f\"{obj.image.image.url}\",",
        "detail": "inventory.admin.product_admin",
        "documentation": {}
    },
    {
        "label": "ProductItemInline",
        "kind": 6,
        "importPath": "inventory.admin.product_admin",
        "description": "inventory.admin.product_admin",
        "peekOfCode": "class ProductItemInline(admin.TabularInline):\n    model = ProductItem\n    fields = (\n        \"product\",\n        \"size\",\n        \"total\",\n        \"buyed_total\",\n        \"ship_total\",\n        \"pending_total\",\n        \"cancelled_total\",",
        "detail": "inventory.admin.product_admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "inventory.admin.product_admin",
        "description": "inventory.admin.product_admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (\n            \"Total\",\n            {\n                \"fields\": (\n                    (\n                        \"total\",\n                        \"buyed_total\",\n                        \"ship_total\",",
        "detail": "inventory.admin.product_admin",
        "documentation": {}
    },
    {
        "label": "PromotionAdmin",
        "kind": 6,
        "importPath": "inventory.admin.promotion_admin",
        "description": "inventory.admin.promotion_admin",
        "peekOfCode": "class PromotionAdmin(admin.ModelAdmin):\n    fields = (\"product\", \"quantity\", \"discount\")\n    # fieldsets = (\n    #     (\n    #         \"Promotion Info\",\n    #         {\n    #             \"fields\": (\"product\", \"quantity\"),\n    #         },\n    #     ),\n    #     (",
        "detail": "inventory.admin.promotion_admin",
        "documentation": {}
    },
    {
        "label": "WarehouseAdmin",
        "kind": 6,
        "importPath": "inventory.admin.warehouse_admin",
        "description": "inventory.admin.warehouse_admin",
        "peekOfCode": "class WarehouseAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (\n            \"Warehouse Info\",\n            {\n                \"fields\": (\"name\", \"address\"),\n            },\n        ),\n        (\n            \"TimeBase\",",
        "detail": "inventory.admin.warehouse_admin",
        "documentation": {}
    },
    {
        "label": "AddressAdmin",
        "kind": 6,
        "importPath": "inventory.admin.warehouse_admin",
        "description": "inventory.admin.warehouse_admin",
        "peekOfCode": "class AddressAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (\n            \"Address Information\",\n            {\n                \"fields\": (\"city\", \"address\", \"region\", \"postal_code\"),\n            },\n        ),\n        (\n            \"TimeBase\",",
        "detail": "inventory.admin.warehouse_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0001_initial",
        "description": "inventory.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Agency',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "inventory.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0002_product_images_productimage",
        "description": "inventory.migrations.0002_product_images_productimage",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('image', '0002_alter_image_image'),\n        ('inventory', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='images',\n            field=models.ManyToManyField(blank=True, related_name='ProductImage', to='image.image'),",
        "detail": "inventory.migrations.0002_product_images_productimage",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0003_comment_remove_product_rating_product_average_rating_and_more",
        "description": "inventory.migrations.0003_comment_remove_product_rating_product_average_rating_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('image', '0002_alter_image_image'),\n        ('inventory', '0002_product_images_productimage'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Comment',\n            fields=[",
        "detail": "inventory.migrations.0003_comment_remove_product_rating_product_average_rating_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0004_product_ratings_alter_comment_user_and_more",
        "description": "inventory.migrations.0004_product_ratings_alter_comment_user_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0003_customer_total'),\n        ('inventory', '0003_comment_remove_product_rating_product_average_rating_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='ratings',\n            field=models.ManyToManyField(blank=True, related_name='Rating', to='user.customer'),",
        "detail": "inventory.migrations.0004_product_ratings_alter_comment_user_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0005_productitem",
        "description": "inventory.migrations.0005_productitem",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0004_product_ratings_alter_comment_user_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ProductItem',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "inventory.migrations.0005_productitem",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0006_order_orderproduct",
        "description": "inventory.migrations.0006_order_orderproduct",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0003_customer_total'),\n        ('inventory', '0005_productitem'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),",
        "detail": "inventory.migrations.0006_order_orderproduct",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0007_cart_cartproduct",
        "description": "inventory.migrations.0007_cart_cartproduct",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0003_customer_total'),\n        ('inventory', '0006_order_orderproduct'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),",
        "detail": "inventory.migrations.0007_cart_cartproduct",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0008_productimage_primary",
        "description": "inventory.migrations.0008_productimage_primary",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0007_cart_cartproduct'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='productimage',\n            name='primary',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "inventory.migrations.0008_productimage_primary",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0009_remove_agency_selected_total_and_more",
        "description": "inventory.migrations.0009_remove_agency_selected_total_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0008_productimage_primary'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='agency',\n            name='selected_total',\n        ),\n        migrations.RemoveField(",
        "detail": "inventory.migrations.0009_remove_agency_selected_total_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0010_rename_money_total_agency_profit_total_and_more",
        "description": "inventory.migrations.0010_rename_money_total_agency_profit_total_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0009_remove_agency_selected_total_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='agency',\n            old_name='money_total',\n            new_name='profit_total',\n        ),",
        "detail": "inventory.migrations.0010_rename_money_total_agency_profit_total_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0011_alter_order_status",
        "description": "inventory.migrations.0011_alter_order_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0010_rename_money_total_agency_profit_total_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='status',\n            field=models.CharField(choices=[('ship', 'Ship'), ('cancel', 'Cancel'), ('complete', 'Complete'), ('return', 'Return'), ('pending', 'Pending')], default='ship', max_length=10),\n        ),",
        "detail": "inventory.migrations.0011_alter_order_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0012_remove_product_discount_product_old_price",
        "description": "inventory.migrations.0012_remove_product_discount_product_old_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0011_alter_order_status'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='discount',\n        ),\n        migrations.AddField(",
        "detail": "inventory.migrations.0012_remove_product_discount_product_old_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0013_remove_cart_products_delete_cartproduct",
        "description": "inventory.migrations.0013_remove_cart_products_delete_cartproduct",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0012_remove_product_discount_product_old_price'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='cart',\n            name='products',\n        ),\n        migrations.DeleteModel(",
        "detail": "inventory.migrations.0013_remove_cart_products_delete_cartproduct",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0014_cart_productitem_cart_quantity",
        "description": "inventory.migrations.0014_cart_productitem_cart_quantity",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0013_remove_cart_products_delete_cartproduct'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='cart',\n            name='productItem',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.productitem'),\n        ),",
        "detail": "inventory.migrations.0014_cart_productitem_cart_quantity",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0015_alter_order_status",
        "description": "inventory.migrations.0015_alter_order_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0014_cart_productitem_cart_quantity'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='status',\n            field=models.CharField(choices=[('creating', 'Creating'), ('ship', 'Ship'), ('cancel', 'Cancel'), ('complete', 'Complete'), ('return', 'Return'), ('pending', 'Pending')], default='ship', max_length=10),\n        ),",
        "detail": "inventory.migrations.0015_alter_order_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0016_order_address_order_phone_order_receiver",
        "description": "inventory.migrations.0016_order_address_order_phone_order_receiver",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0015_alter_order_status'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='address',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "inventory.migrations.0016_order_address_order_phone_order_receiver",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0017_alter_order_products",
        "description": "inventory.migrations.0017_alter_order_products",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0016_order_address_order_phone_order_receiver'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='products',\n            field=models.ManyToManyField(blank=True, related_name='OrderProduct', to='inventory.productitem'),\n        ),",
        "detail": "inventory.migrations.0017_alter_order_products",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0018_agency_pending_total_product_pending_total_and_more",
        "description": "inventory.migrations.0018_agency_pending_total_product_pending_total_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0017_alter_order_products'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='agency',\n            name='pending_total',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "inventory.migrations.0018_agency_pending_total_product_pending_total_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0019_alter_agency_buyed_total_and_more",
        "description": "inventory.migrations.0019_alter_agency_buyed_total_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0018_agency_pending_total_product_pending_total_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='agency',\n            name='buyed_total',\n            field=models.BigIntegerField(default=0),\n        ),",
        "detail": "inventory.migrations.0019_alter_agency_buyed_total_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0020_delete_commentimage",
        "description": "inventory.migrations.0020_delete_commentimage",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0019_alter_agency_buyed_total_and_more'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='CommentImage',\n        ),\n    ]",
        "detail": "inventory.migrations.0020_delete_commentimage",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0021_remove_comment_images_remove_comment_product_and_more",
        "description": "inventory.migrations.0021_remove_comment_images_remove_comment_product_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0020_delete_commentimage'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='comment',\n            name='images',\n        ),\n        migrations.RemoveField(",
        "detail": "inventory.migrations.0021_remove_comment_images_remove_comment_product_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0022_remove_product_comments_remove_product_ratings_and_more",
        "description": "inventory.migrations.0022_remove_product_comments_remove_product_ratings_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0021_remove_comment_images_remove_comment_product_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='comments',\n        ),\n        migrations.RemoveField(",
        "detail": "inventory.migrations.0022_remove_product_comments_remove_product_ratings_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0023_rating_rate_point",
        "description": "inventory.migrations.0023_rating_rate_point",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0022_remove_product_comments_remove_product_ratings_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='rating',\n            name='rate_point',\n            field=models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5),\n        ),",
        "detail": "inventory.migrations.0023_rating_rate_point",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0024_delete_rating",
        "description": "inventory.migrations.0024_delete_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0023_rating_rate_point'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Rating',\n        ),\n    ]",
        "detail": "inventory.migrations.0024_delete_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0025_delete_comment",
        "description": "inventory.migrations.0025_delete_comment",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0024_delete_rating'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Comment',\n        ),\n    ]",
        "detail": "inventory.migrations.0025_delete_comment",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0026_rating",
        "description": "inventory.migrations.0026_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0011_alter_customer_buyed_total_and_more'),\n        ('inventory', '0025_delete_comment'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Rating',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),",
        "detail": "inventory.migrations.0026_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0027_alter_rating_content",
        "description": "inventory.migrations.0027_alter_rating_content",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0026_rating'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='rating',\n            name='content',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "inventory.migrations.0027_alter_rating_content",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0028_rename_content_rating_comment",
        "description": "inventory.migrations.0028_rename_content_rating_comment",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0027_alter_rating_content'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='rating',\n            old_name='content',\n            new_name='comment',\n        ),",
        "detail": "inventory.migrations.0028_rename_content_rating_comment",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0029_rename_rating_review",
        "description": "inventory.migrations.0029_rename_rating_review",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0011_alter_customer_buyed_total_and_more'),\n        ('inventory', '0028_rename_content_rating_comment'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Rating',\n            new_name='Review',\n        ),",
        "detail": "inventory.migrations.0029_rename_rating_review",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0030_alter_review_table",
        "description": "inventory.migrations.0030_alter_review_table",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0029_rename_rating_review'),\n    ]\n    operations = [\n        migrations.AlterModelTable(\n            name='review',\n            table='review',\n        ),\n    ]",
        "detail": "inventory.migrations.0030_alter_review_table",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0031_alter_agency_table_alter_cart_table_and_more",
        "description": "inventory.migrations.0031_alter_agency_table_alter_cart_table_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0030_alter_review_table'),\n    ]\n    operations = [\n        migrations.AlterModelTable(\n            name='agency',\n            table='agency',\n        ),\n        migrations.AlterModelTable(",
        "detail": "inventory.migrations.0031_alter_agency_table_alter_cart_table_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0032_review_reply",
        "description": "inventory.migrations.0032_review_reply",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0031_alter_agency_table_alter_cart_table_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='review',\n            name='reply',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "inventory.migrations.0032_review_reply",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0033_order_payment_session",
        "description": "inventory.migrations.0033_order_payment_session",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0032_review_reply'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='payment_session',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "inventory.migrations.0033_order_payment_session",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0034_order_payment_done",
        "description": "inventory.migrations.0034_order_payment_done",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0033_order_payment_session'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='payment_done',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "inventory.migrations.0034_order_payment_done",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0035_remove_order_user_order_customer",
        "description": "inventory.migrations.0035_remove_order_user_order_customer",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0012_alter_user_options_alter_customer_table_and_more'),\n        ('inventory', '0034_order_payment_done'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order',\n            name='user',\n        ),",
        "detail": "inventory.migrations.0035_remove_order_user_order_customer",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0036_rename_user_cart_customer_and_more",
        "description": "inventory.migrations.0036_rename_user_cart_customer_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0035_remove_order_user_order_customer'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='cart',\n            old_name='user',\n            new_name='customer',\n        ),",
        "detail": "inventory.migrations.0036_rename_user_cart_customer_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0037_address_warehouse_product_warehouse",
        "description": "inventory.migrations.0037_address_warehouse_product_warehouse",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0036_rename_user_cart_customer_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Address',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "inventory.migrations.0037_address_warehouse_product_warehouse",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0038_clothes_shoes_alter_product_category",
        "description": "inventory.migrations.0038_clothes_shoes_alter_product_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0037_address_warehouse_product_warehouse'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Clothes',\n            fields=[\n            ],\n            options={",
        "detail": "inventory.migrations.0038_clothes_shoes_alter_product_category",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0039_campaign_promotion_campaignpromotion_campaignorder",
        "description": "inventory.migrations.0039_campaign_promotion_campaignpromotion_campaignorder",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0038_clothes_shoes_alter_product_category'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Campaign',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "inventory.migrations.0039_campaign_promotion_campaignpromotion_campaignorder",
        "documentation": {}
    },
    {
        "label": "Agency",
        "kind": 6,
        "importPath": "inventory.models.agency",
        "description": "inventory.models.agency",
        "peekOfCode": "class Agency(TimeBase, Statistics):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    description = models.TextField(null=True, blank=True)\n    def __str__(self):\n        return self.name\n    def update_total(self):\n        # Import Product here to avoid circular import\n        from .product import Product\n        products = Product.objects.filter(agency=self).aggregate(",
        "detail": "inventory.models.agency",
        "documentation": {}
    },
    {
        "label": "ProductInfo",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class ProductInfo:    \n    def __init__(self, name, description, average_rating, category):\n        self.name = name\n        self.description = description\n        self.average_rating = average_rating\n        self.category = category\n    def __str__(self):\n        return self.name\nclass Price:\n    def __init__(self, cost, price, old_price):",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "Price",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class Price:\n    def __init__(self, cost, price, old_price):\n        self.cost = cost\n        self.price = price\n        self.old_price = old_price\n    def __str__(self):\n        return f\"{self.cost}, {self.price}, {self.old_price}\"\nclass PaymentOrder:\n    def __init__(self, payment_session, payment_done):\n        self.payment_session = payment_session",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "PaymentOrder",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class PaymentOrder:\n    def __init__(self, payment_session, payment_done):\n        self.payment_session = payment_session\n        self.payment_done = payment_done\n    def __str__(self):\n        return f\"{self.payment_session}, {self.payment_done}\"\nclass ShippingAddress:\n    def __init__(self, receiver, phone, address):\n        self.receiver = receiver\n        self.phone = phone",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "ShippingAddress",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class ShippingAddress:\n    def __init__(self, receiver, phone, address):\n        self.receiver = receiver\n        self.phone = phone\n        self.address = address\n    def __str__(self):\n        return f\"{self.receiver}, {self.phone}, {self.address}\"\nclass ReviewInfo:\n    def __init__(self, comment, reply, rate_point):\n        self.comment = comment",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "ReviewInfo",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class ReviewInfo:\n    def __init__(self, comment, reply, rate_point):\n        self.comment = comment\n        self.reply = reply\n        self.rate_point = rate_point\n    def __str__(self):\n        return f\"{self.comment}, {self.reply}, {self.rate_point}\"\nclass PromotionType:\n    def __init__(self, type):\n        self.type = type",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "PromotionType",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class PromotionType:\n    def __init__(self, type):\n        self.type = type\n    def get_type(self):\n        return self.type\nclass CampaignTime:\n    def __init__(self, start_time, end_time):\n        self.start_time = start_time\n        self.end_time = end_time\n    def get_time(self):",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "CampaignTime",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class CampaignTime:\n    def __init__(self, start_time, end_time):\n        self.start_time = start_time\n        self.end_time = end_time\n    def get_time(self):\n        return self.start_time, self.end_time\n    def check_time(self):\n        return self.start_time < timezone.now() and self.end_time > timezone.now()\nclass Discount:\n    def __init__(self, discount, discount_code):",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "Discount",
        "kind": 6,
        "importPath": "inventory.models.base",
        "description": "inventory.models.base",
        "peekOfCode": "class Discount:\n    def __init__(self, discount, discount_code):\n        self.discount = discount\n        self.discount_code = discount_code\n    def get_discount(self):\n        return self.discount, self.discount_code",
        "detail": "inventory.models.base",
        "documentation": {}
    },
    {
        "label": "Campaign",
        "kind": 6,
        "importPath": "inventory.models.campaign",
        "description": "inventory.models.campaign",
        "peekOfCode": "class Campaign(TimeBase, Statistics):\n    PENDING = \"pending\"\n    RUNNING = \"running\"\n    CLOSE = \"close\"\n    STATUS = [\n        (PENDING, \"pending\"),\n        (RUNNING, \"running\"),\n        (CLOSE, \"close\"),\n    ]\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)",
        "detail": "inventory.models.campaign",
        "documentation": {}
    },
    {
        "label": "CampaignOrder",
        "kind": 6,
        "importPath": "inventory.models.campaign",
        "description": "inventory.models.campaign",
        "peekOfCode": "class CampaignOrder(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    campaign = models.ForeignKey(Campaign, on_delete=models.CASCADE)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)\n    promotions = models.ManyToManyField(\n        Promotion, related_name=\"CampaignPromotion\", blank=True\n    )\n    class Meta:\n        db_table = \"campaign_order\"\nclass CampaignPromotion(models.Model):",
        "detail": "inventory.models.campaign",
        "documentation": {}
    },
    {
        "label": "CampaignPromotion",
        "kind": 6,
        "importPath": "inventory.models.campaign",
        "description": "inventory.models.campaign",
        "peekOfCode": "class CampaignPromotion(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    campaign = models.ForeignKey(Campaign, on_delete=models.CASCADE)\n    promotion = models.ForeignKey(Promotion, on_delete=models.CASCADE)\n    class Meta:\n        db_table = \"campaign_promotion\"",
        "detail": "inventory.models.campaign",
        "documentation": {}
    },
    {
        "label": "generate_discount_code",
        "kind": 2,
        "importPath": "inventory.models.campaign",
        "description": "inventory.models.campaign",
        "peekOfCode": "def generate_discount_code():\n    return \"\".join(random.choices(string.ascii_uppercase + string.digits, k=6))\nclass Campaign(TimeBase, Statistics):\n    PENDING = \"pending\"\n    RUNNING = \"running\"\n    CLOSE = \"close\"\n    STATUS = [\n        (PENDING, \"pending\"),\n        (RUNNING, \"running\"),\n        (CLOSE, \"close\"),",
        "detail": "inventory.models.campaign",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "inventory.models.order",
        "description": "inventory.models.order",
        "peekOfCode": "class Order(TimeBase):\n    CREATING = \"creating\"\n    PENDING = \"pending\"\n    SHIP = \"ship\"\n    CANCEL = \"cancel\"\n    COMPLETE = \"complete\"\n    RETURN = \"return\"\n    STATUS_CHOICE = (\n        (CREATING, \"Creating\"),\n        (SHIP, \"Ship\"),",
        "detail": "inventory.models.order",
        "documentation": {}
    },
    {
        "label": "OrderProduct",
        "kind": 6,
        "importPath": "inventory.models.order",
        "description": "inventory.models.order",
        "peekOfCode": "class OrderProduct(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)\n    productItem = models.ForeignKey(ProductItem, on_delete=models.CASCADE)\n    quantity = models.IntegerField(default=1)\n    def __str__(self) -> str:\n        return f\"{self.productItem.product.name}, {self.productItem.size}\"\n    class Meta:\n        db_table = \"order_product\"\nclass Cart(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)",
        "detail": "inventory.models.order",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "inventory.models.order",
        "description": "inventory.models.order",
        "peekOfCode": "class Cart(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    productItem = models.ForeignKey(ProductItem, on_delete=models.CASCADE, blank=True, null=True)\n    quantity = models.IntegerField(default=1)\n    class Meta:\n        db_table = \"cart\"",
        "detail": "inventory.models.order",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "peekOfCode": "class Product(TimeBase, Statistics):\n    MALE = \"male\"\n    FEMALE = \"female\"\n    CATEGORY_CHOICE = (\n        (MALE, \"Male\"),\n        (FEMALE, \"Female\"),\n    )\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    agency = models.ForeignKey(Agency, on_delete=models.CASCADE)\n    view = models.IntegerField(default=0)",
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "ProductItem",
        "kind": 6,
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "peekOfCode": "class ProductItem(TimeBase, Statistics):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name=\"sizes\")\n    size = models.CharField(max_length=255, null=True, blank=True)\n    def save(self, *args, **kwargs):\n        super().save(*args, **kwargs)\n        self.product.update_total()\n        self.product.save()\n    def __str__(self):\n        return f\"{self.product.name}, {self.size}\"",
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "kind": 6,
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "peekOfCode": "class ProductImage(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    image = models.ForeignKey(Image, on_delete=models.CASCADE)\n    primary = models.BooleanField(default=False)\n    class Meta:\n        db_table = \"product_image\"\nclass Shoes(Product):\n    SNEAKER = \"sneaker\"\n    BOOTS = \"boots\"\n    SANDALS = \"sandals\"",
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "Shoes",
        "kind": 6,
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "peekOfCode": "class Shoes(Product):\n    SNEAKER = \"sneaker\"\n    BOOTS = \"boots\"\n    SANDALS = \"sandals\"\n    SLIPPERS = \"slippers\"\n    FORMAL = \"formal\"\n    SHOES_CATEGORY_CHOICE = (\n        (SNEAKER, \"Sneaker\"),\n        (BOOTS, \"Boots\"),\n        (SANDALS, \"Sandals\"),",
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "Clothes",
        "kind": 6,
        "importPath": "inventory.models.product",
        "description": "inventory.models.product",
        "peekOfCode": "class Clothes(Product):\n    SHIRT = \"Shirt\"\n    PANTS = \"Pants\"\n    DRESS = \"Dress\"\n    JACKET = \"Jacket\"\n    SWEATER = \"Sweater\"\n    CLOTHES_CATEGORY_CHOICE = (\n        (SHIRT, \"Shirt\"),\n        (PANTS, \"Pants\"),\n        (DRESS, \"Dress\"),",
        "detail": "inventory.models.product",
        "documentation": {}
    },
    {
        "label": "Promotion",
        "kind": 6,
        "importPath": "inventory.models.promotion",
        "description": "inventory.models.promotion",
        "peekOfCode": "class Promotion(TimeBase):\n    FLASH_DEAL = \"flash_deal\"\n    PRODUCT_DISCOUNT = \"product_discount\"\n    PROMOTION_TYPE_CHOICES = [\n        (FLASH_DEAL, \"Flash Deal\"),\n        (PRODUCT_DISCOUNT, \"Product Discount\"),\n    ]\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.IntegerField()",
        "detail": "inventory.models.promotion",
        "documentation": {}
    },
    {
        "label": "generate_discount_code",
        "kind": 2,
        "importPath": "inventory.models.promotion",
        "description": "inventory.models.promotion",
        "peekOfCode": "def generate_discount_code():\n    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\nclass Promotion(TimeBase):\n    FLASH_DEAL = \"flash_deal\"\n    PRODUCT_DISCOUNT = \"product_discount\"\n    PROMOTION_TYPE_CHOICES = [\n        (FLASH_DEAL, \"Flash Deal\"),\n        (PRODUCT_DISCOUNT, \"Product Discount\"),\n    ]\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)",
        "detail": "inventory.models.promotion",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "inventory.models.review",
        "description": "inventory.models.review",
        "peekOfCode": "class Review(TimeBase):\n    RATE_CHOICES = [\n        (1, 1),\n        (2, 2),\n        (3, 3),\n        (4, 4),\n        (5, 5),\n    ]\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order_product = models.ForeignKey(",
        "detail": "inventory.models.review",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "inventory.models.warehouse",
        "description": "inventory.models.warehouse",
        "peekOfCode": "class Address(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    city = models.CharField(max_length=255)\n    address = models.CharField(max_length=255)\n    region = models.CharField(max_length=255)\n    postal_code = models.CharField(max_length=255)\n    def __str__(self):\n        return f\"{self.city}, {self.address}, {self.region}, {self.postal_code}\"\n    class Meta:\n        db_table = \"address\"",
        "detail": "inventory.models.warehouse",
        "documentation": {}
    },
    {
        "label": "Warehouse",
        "kind": 6,
        "importPath": "inventory.models.warehouse",
        "description": "inventory.models.warehouse",
        "peekOfCode": "class Warehouse(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    address = models.ForeignKey(Address, on_delete=models.CASCADE)\n    class Meta:\n        db_table = \"warehouse\"",
        "detail": "inventory.models.warehouse",
        "documentation": {}
    },
    {
        "label": "InventoryConfig",
        "kind": 6,
        "importPath": "inventory.apps",
        "description": "inventory.apps",
        "peekOfCode": "class InventoryConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'inventory'\n    def ready(self) -> None:\n        import inventory.signals",
        "detail": "inventory.apps",
        "documentation": {}
    },
    {
        "label": "ProductFilter",
        "kind": 6,
        "importPath": "inventory.filters",
        "description": "inventory.filters",
        "peekOfCode": "class ProductFilter(filters.FilterSet):\n    name = filters.CharFilter(field_name=\"name\", lookup_expr=\"icontains\")\n    min_price = filters.NumberFilter(field_name=\"price\", lookup_expr=\"gte\")\n    max_price = filters.NumberFilter(field_name=\"price\", lookup_expr=\"lte\")\n    average_rating = filters.NumberFilter(\n        field_name=\"average_rating\", lookup_expr=\"gte\"\n    )\n    agency = filters.CharFilter(field_name=\"agency__name\", lookup_expr=\"icontains\")\n    class Meta:\n        model = Product",
        "detail": "inventory.filters",
        "documentation": {}
    },
    {
        "label": "OrderFilter",
        "kind": 6,
        "importPath": "inventory.filters",
        "description": "inventory.filters",
        "peekOfCode": "class OrderFilter(filters.FilterSet):\n    class Meta:\n        model = Order\n        fields = [\"status\"]\nclass ReviewFilter(filters.FilterSet):\n    product = filters.CharFilter(\n        field_name=\"order_product__productItem__product__id\", lookup_expr=\"icontains\"\n    )\n    class Meta:\n        model = Review",
        "detail": "inventory.filters",
        "documentation": {}
    },
    {
        "label": "ReviewFilter",
        "kind": 6,
        "importPath": "inventory.filters",
        "description": "inventory.filters",
        "peekOfCode": "class ReviewFilter(filters.FilterSet):\n    product = filters.CharFilter(\n        field_name=\"order_product__productItem__product__id\", lookup_expr=\"icontains\"\n    )\n    class Meta:\n        model = Review\n        fields = [\"product\"]",
        "detail": "inventory.filters",
        "documentation": {}
    },
    {
        "label": "AgencySerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class AgencySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Agency\n        fields = [\"name\"]\nclass CartPostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = [\"id\", \"productItem\"]\nclass CartListSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "CartPostSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class CartPostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = [\"id\", \"productItem\"]\nclass CartListSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()\n    class Meta:\n        model = Cart\n        fields = [\n            \"id\",",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "CartListSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class CartListSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()\n    class Meta:\n        model = Cart\n        fields = [\n            \"id\",\n            \"product\",\n            \"quantity\",\n        ]\n    def get_product(self, obj):",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = \"__all__\"\nclass ProductListSerializer(serializers.ModelSerializer):\n    image_url = serializers.SerializerMethodField()\n    class Meta:\n        model = Product\n        fields = [\n            \"id\",",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "ProductListSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class ProductListSerializer(serializers.ModelSerializer):\n    image_url = serializers.SerializerMethodField()\n    class Meta:\n        model = Product\n        fields = [\n            \"id\",\n            \"name\",\n            \"price\",\n            \"old_price\",\n            \"buyed_total\",",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "ProductDetailSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class ProductDetailSerializer(serializers.ModelSerializer):\n    agency = AgencySerializer(read_only=True)\n    image_list = serializers.SerializerMethodField()\n    item = serializers.SerializerMethodField()\n    class Meta:\n        model = Product\n        fields = [\n            \"id\",\n            \"name\",\n            \"price\",",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = \"__all__\"\nclass OrderProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = OrderProduct\n        fields = [\"productItem\", \"quantity\"]\nclass OrderCreateSerializer(serializers.ModelSerializer):\n    products = OrderProductSerializer(many=True)",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "OrderProductSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class OrderProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = OrderProduct\n        fields = [\"productItem\", \"quantity\"]\nclass OrderCreateSerializer(serializers.ModelSerializer):\n    products = OrderProductSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = [\"products\", \"total_price\", \"status\"]\nclass OrderDetailSerializer(serializers.ModelSerializer):",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "OrderCreateSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class OrderCreateSerializer(serializers.ModelSerializer):\n    products = OrderProductSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = [\"products\", \"total_price\", \"status\"]\nclass OrderDetailSerializer(serializers.ModelSerializer):\n    products = serializers.SerializerMethodField()\n    class Meta:\n        model = Order\n        fields = [",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "OrderDetailSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class OrderDetailSerializer(serializers.ModelSerializer):\n    products = serializers.SerializerMethodField()\n    class Meta:\n        model = Order\n        fields = [\n            \"id\",\n            \"receiver\",\n            \"phone\",\n            \"address\",\n            \"total_price\",",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        fields = \"__all__\"\nclass ReviewCreateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        exclude = [\"customer\"]\nclass ReviewListSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewCreateSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class ReviewCreateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        exclude = [\"customer\"]\nclass ReviewListSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()\n    replied = serializers.SerializerMethodField()\n    class Meta:\n        model = Review\n        fields = [",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewListSerializer",
        "kind": 6,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "class ReviewListSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()\n    replied = serializers.SerializerMethodField()\n    class Meta:\n        model = Review\n        fields = [\n            \"id\",\n            \"product\",\n            \"comment\",\n            \"reply\",",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "stripe.api_key",
        "kind": 5,
        "importPath": "inventory.serializers",
        "description": "inventory.serializers",
        "peekOfCode": "stripe.api_key = settings.STRIPE_SECRET\n# Create your tests here.\nclass AgencySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Agency\n        fields = [\"name\"]\nclass CartPostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = [\"id\", \"productItem\"]",
        "detail": "inventory.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "inventory.urls",
        "description": "inventory.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r\"products\", ProductViewSet, basename=\"products\")\nrouter.register(r\"agency\", AgencyViewSet, basename=\"agency\")\nrouter.register(r\"cart\", CartViewSet, basename=\"cart\")\nrouter.register(r\"order\", OrderViewSet, basename=\"order\")\nrouter.register(r\"rating\", ReviewViewSet, basename=\"rating\")\n# router.register(r\"comment\", CommentViewSet, basename=\"comment\")\nurlpatterns = [path(\"\", include(router.urls))]",
        "detail": "inventory.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "inventory.urls",
        "description": "inventory.urls",
        "peekOfCode": "urlpatterns = [path(\"\", include(router.urls))]",
        "detail": "inventory.urls",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class ProductViewSet(ModelViewSet):\n    pagination_class = StandardPageNumberPagination\n    serializer_class = ProductListSerializer\n    filter_backends = (DjangoFilterBackend, OrderingFilter)\n    filterset_class = ProductFilter\n    queryset = Product.objects.all()\n    ordering_fields = [\"created_at\", \"buyed_total\", \"price\", \"view\"]\n    ordering = [\"-buyed_total\"]\n    def get_permissions(self):\n        match self.action:",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "AgencyViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class AgencyViewSet(ModelViewSet):\n    pagination_class = StandardPageNumberPagination\n    serializer_class = AgencySerializer\n    queryset = Agency.objects.all()\n    def get_permissions(self):\n        match self.action:\n            case \"list\":\n                self.permission_classes = []\n            case _:\n                self.permission_classes = [IsStaffOrAdmin]",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class CartViewSet(ModelViewSet):\n    pagination_class = StandardPageNumberPagination\n    permission_classes = [IsActiveUser]\n    serializer_class = CartSerializer\n    # queryset = Cart.objects.all()\n    def get_serializer_class(self):\n        match self.action:\n            case \"list\":\n                return CartListSerializer\n            case \"create\":",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "OrderViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class OrderViewSet(ModelViewSet):\n    pagination_class = StandardPageNumberPagination\n    serializer_class = OrderSerializer\n    permission_classes = [IsActiveUser]\n    filter_backends = (DjangoFilterBackend, OrderingFilter)\n    filterset_class = OrderFilter\n    ordering_fields = [\"updated_at\"]\n    ordering = [\"-updated_at\"]\n    def get_serializer_class(self):\n        match self.action:",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "ReviewViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class ReviewViewSet(ModelViewSet):\n    serializer_class = ReviewSerializer\n    permission_classes = []\n    filter_backends = (DjangoFilterBackend, OrderingFilter)\n    filterset_class = ReviewFilter\n    queryset = Review.objects.all()\n    ordering = [\"-created_at\"]\n    def get_serializer_class(self):\n        match self.action:\n            case \"create\":",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "stripe.api_key",
        "kind": 5,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "stripe.api_key = settings.STRIPE_SECRET\n# Create your views here.\nclass ProductViewSet(ModelViewSet):\n    pagination_class = StandardPageNumberPagination\n    serializer_class = ProductListSerializer\n    filter_backends = (DjangoFilterBackend, OrderingFilter)\n    filterset_class = ProductFilter\n    queryset = Product.objects.all()\n    ordering_fields = [\"created_at\", \"buyed_total\", \"price\", \"view\"]\n    ordering = [\"-buyed_total\"]",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "path",
        "kind": 5,
        "importPath": "scripts.clothes",
        "description": "scripts.clothes",
        "peekOfCode": "path = \"zune\"\nagencies = [\"LuxeFit\", \"VeraMode\", \"NoirWear\"]\ndescription = \"\"\"👗👚👕🧥👖 Quần áo phong cách và đa dạng 👖🧥👕👚👗\nDành cho cả nam và nữ, mỗi bộ trang phục đều mang đến sự tự tin và phong cách riêng! 🌟\nChất liệu và thiết kế unisex, phù hợp với mọi đối tượng. 💫\n▪️Size: Freesize, phù hợp với nhiều vóc dáng khác nhau\n▪️Màu sắc: Đa dạng, từ basic đến nổi bật, giúp bạn dễ dàng lựa chọn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅\nChất liệu vải mềm mại, thoải mái, giúp bạn tự do di chuyển cả ngày dài. 💯",
        "detail": "scripts.clothes",
        "documentation": {}
    },
    {
        "label": "agencies",
        "kind": 5,
        "importPath": "scripts.clothes",
        "description": "scripts.clothes",
        "peekOfCode": "agencies = [\"LuxeFit\", \"VeraMode\", \"NoirWear\"]\ndescription = \"\"\"👗👚👕🧥👖 Quần áo phong cách và đa dạng 👖🧥👕👚👗\nDành cho cả nam và nữ, mỗi bộ trang phục đều mang đến sự tự tin và phong cách riêng! 🌟\nChất liệu và thiết kế unisex, phù hợp với mọi đối tượng. 💫\n▪️Size: Freesize, phù hợp với nhiều vóc dáng khác nhau\n▪️Màu sắc: Đa dạng, từ basic đến nổi bật, giúp bạn dễ dàng lựa chọn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅\nChất liệu vải mềm mại, thoải mái, giúp bạn tự do di chuyển cả ngày dài. 💯\nKiểm tra và đóng gói cẩn thận trước khi giao hàng, đảm bảo sản phẩm không bị hỏng hoặc bẩn khi nhận hàng. 📦",
        "detail": "scripts.clothes",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": "scripts.clothes",
        "description": "scripts.clothes",
        "peekOfCode": "description = \"\"\"👗👚👕🧥👖 Quần áo phong cách và đa dạng 👖🧥👕👚👗\nDành cho cả nam và nữ, mỗi bộ trang phục đều mang đến sự tự tin và phong cách riêng! 🌟\nChất liệu và thiết kế unisex, phù hợp với mọi đối tượng. 💫\n▪️Size: Freesize, phù hợp với nhiều vóc dáng khác nhau\n▪️Màu sắc: Đa dạng, từ basic đến nổi bật, giúp bạn dễ dàng lựa chọn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅\nChất liệu vải mềm mại, thoải mái, giúp bạn tự do di chuyển cả ngày dài. 💯\nKiểm tra và đóng gói cẩn thận trước khi giao hàng, đảm bảo sản phẩm không bị hỏng hoặc bẩn khi nhận hàng. 📦\nSẵn sàng giao hàng ngay khi nhận được đơn, tiết kiệm thời gian cho bạn. ⏰",
        "detail": "scripts.clothes",
        "documentation": {}
    },
    {
        "label": "sizes",
        "kind": 5,
        "importPath": "scripts.clothes",
        "description": "scripts.clothes",
        "peekOfCode": "sizes = [\"S\", \"M\", \"L\", \"XL\", \"2XL\", \"3XL\"]\n# Tạo danh sách Agency (chọn ngẫu nhiên từ danh sách agencies)\nagency_objects = [Agency(name=agency) for agency in agencies]\nAgency.objects.bulk_create(agency_objects)\n# Duyệt qua các thư mục con trong thư mục zune\nfor subdir in os.listdir(path):\n    subdir_path = os.path.join(path, subdir)\n    product_images = []\n    image_folder = subdir_path  # Thư mục chứa ảnh sản phẩm\n    image_files = [",
        "detail": "scripts.clothes",
        "documentation": {}
    },
    {
        "label": "agency_objects",
        "kind": 5,
        "importPath": "scripts.clothes",
        "description": "scripts.clothes",
        "peekOfCode": "agency_objects = [Agency(name=agency) for agency in agencies]\nAgency.objects.bulk_create(agency_objects)\n# Duyệt qua các thư mục con trong thư mục zune\nfor subdir in os.listdir(path):\n    subdir_path = os.path.join(path, subdir)\n    product_images = []\n    image_folder = subdir_path  # Thư mục chứa ảnh sản phẩm\n    image_files = [\n        f for f in os.listdir(image_folder) if f.endswith((\".jpg\", \".jpeg\", \".png\"))\n    ]",
        "detail": "scripts.clothes",
        "documentation": {}
    },
    {
        "label": "urls",
        "kind": 5,
        "importPath": "scripts.crawl",
        "description": "scripts.crawl",
        "peekOfCode": "urls = [\"https://zunezx.com/san-pham.html\", \"https://zunezx.com/san-pham.html?page=2\"]\nproduct_urls = []\nos.makedirs(\"zune\", exist_ok=True)\nfor url in urls:\n    response = requests.get(url)\n    if response.status_code == 200:\n        soup = BeautifulSoup(response.text, \"html.parser\")\n        products = soup.find_all(\"a\", href=True, title=True)\n        for product in products:\n            img_tag = product.find(\"img\", class_=\"img-responsive main-img main\")",
        "detail": "scripts.crawl",
        "documentation": {}
    },
    {
        "label": "product_urls",
        "kind": 5,
        "importPath": "scripts.crawl",
        "description": "scripts.crawl",
        "peekOfCode": "product_urls = []\nos.makedirs(\"zune\", exist_ok=True)\nfor url in urls:\n    response = requests.get(url)\n    if response.status_code == 200:\n        soup = BeautifulSoup(response.text, \"html.parser\")\n        products = soup.find_all(\"a\", href=True, title=True)\n        for product in products:\n            img_tag = product.find(\"img\", class_=\"img-responsive main-img main\")\n            if img_tag:",
        "detail": "scripts.crawl",
        "documentation": {}
    },
    {
        "label": "clean",
        "kind": 2,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "def clean(price):\n    price = price.replace(',', '')\n    return int(price)\nsizes = ['36', '37', '38', '39', '40', '41', '42', '43', '44']\nproducts = []    \nproducts_images = []\nfor item in data:\n    agency = Agency.objects.get(name=item['brand'])\n    product = Shoes(\n        name = item['name'],",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "path",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "path = 'import/images'\njson_path = 'import/data.json'\nagencies = []\ndescription = \"\"\"👟👞👠🥿👡 Giày dép phong cách và đa dạng 👡🥿👠👞👟\nNam nữ unisex, mỗi đôi đều mang một câu chuyện riêng! 🌟\nChất liệu và form unisex, phù hợp cho cả nam và nữ. 💫\n▪️Size: Freesize, phù hợp với dưới 65kg\n▪️Màu sắc: Đa dạng, từ trắng đến đen, tạo sự lựa chọn cho bạn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "json_path",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "json_path = 'import/data.json'\nagencies = []\ndescription = \"\"\"👟👞👠🥿👡 Giày dép phong cách và đa dạng 👡🥿👠👞👟\nNam nữ unisex, mỗi đôi đều mang một câu chuyện riêng! 🌟\nChất liệu và form unisex, phù hợp cho cả nam và nữ. 💫\n▪️Size: Freesize, phù hợp với dưới 65kg\n▪️Màu sắc: Đa dạng, từ trắng đến đen, tạo sự lựa chọn cho bạn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅\nChất liệu vải đảm bảo chất lượng, đem lại sự thoải mái cho đôi chân của bạn. 💯",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "agencies",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "agencies = []\ndescription = \"\"\"👟👞👠🥿👡 Giày dép phong cách và đa dạng 👡🥿👠👞👟\nNam nữ unisex, mỗi đôi đều mang một câu chuyện riêng! 🌟\nChất liệu và form unisex, phù hợp cho cả nam và nữ. 💫\n▪️Size: Freesize, phù hợp với dưới 65kg\n▪️Màu sắc: Đa dạng, từ trắng đến đen, tạo sự lựa chọn cho bạn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅\nChất liệu vải đảm bảo chất lượng, đem lại sự thoải mái cho đôi chân của bạn. 💯\nKiểm tra và đóng gói cẩn thận trước khi giao hàng, đảm bảo sản phẩm không bị hỏng hoặc bẩn khi nhận hàng. 📦",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "description = \"\"\"👟👞👠🥿👡 Giày dép phong cách và đa dạng 👡🥿👠👞👟\nNam nữ unisex, mỗi đôi đều mang một câu chuyện riêng! 🌟\nChất liệu và form unisex, phù hợp cho cả nam và nữ. 💫\n▪️Size: Freesize, phù hợp với dưới 65kg\n▪️Màu sắc: Đa dạng, từ trắng đến đen, tạo sự lựa chọn cho bạn. 🌈\nCAM KẾT:\nSản phẩm 100% giống mô tả, đảm bảo sự hài lòng của khách hàng. ✅\nChất liệu vải đảm bảo chất lượng, đem lại sự thoải mái cho đôi chân của bạn. 💯\nKiểm tra và đóng gói cẩn thận trước khi giao hàng, đảm bảo sản phẩm không bị hỏng hoặc bẩn khi nhận hàng. 📦\nSẵn sàng giao hàng ngay khi nhận được đơn, tiết kiệm thời gian cho bạn. ⏰",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "sizes",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "sizes = ['36', '37', '38', '39', '40', '41', '42', '43', '44']\nproducts = []    \nproducts_images = []\nfor item in data:\n    agency = Agency.objects.get(name=item['brand'])\n    product = Shoes(\n        name = item['name'],\n        price = clean(item['price_sale']),\n        old_price = clean(item['price_original']),\n        cost = int(int(clean(item['price_sale'])) * 0.8),",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "products",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "products = []    \nproducts_images = []\nfor item in data:\n    agency = Agency.objects.get(name=item['brand'])\n    product = Shoes(\n        name = item['name'],\n        price = clean(item['price_sale']),\n        old_price = clean(item['price_original']),\n        cost = int(int(clean(item['price_sale'])) * 0.8),\n        description = description,",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "products_images",
        "kind": 5,
        "importPath": "scripts.shoes",
        "description": "scripts.shoes",
        "peekOfCode": "products_images = []\nfor item in data:\n    agency = Agency.objects.get(name=item['brand'])\n    product = Shoes(\n        name = item['name'],\n        price = clean(item['price_sale']),\n        old_price = clean(item['price_original']),\n        cost = int(int(clean(item['price_sale'])) * 0.8),\n        description = description,\n        agency = agency,",
        "detail": "scripts.shoes",
        "documentation": {}
    },
    {
        "label": "NotificationAdminForm",
        "kind": 6,
        "importPath": "user.admin.notification_admin",
        "description": "user.admin.notification_admin",
        "peekOfCode": "class NotificationAdminForm(forms.ModelForm):\n    content_text = forms.CharField(\n        widget=forms.Textarea(attrs={\"rows\": 4}), required=False\n    )\n    class Meta:\n        model = Notification\n        fields = [\"customer\", \"title\", \"is_seen\"]\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        if self.instance and self.instance.content:",
        "detail": "user.admin.notification_admin",
        "documentation": {}
    },
    {
        "label": "NotificationAdmin",
        "kind": 6,
        "importPath": "user.admin.notification_admin",
        "description": "user.admin.notification_admin",
        "peekOfCode": "class NotificationAdmin(admin.ModelAdmin):\n    form = NotificationAdminForm\n    list_display = (\"customer\", \"title\", \"content_display\", \"is_seen\", \"created_at\")\n    list_filter = (\"is_seen\", \"created_at\")\n    search_fields = (\n        \"customer__user__email\",\n        \"customer__user__first_name\",\n        \"customer__user__last_name\",\n        \"content__content\",\n        \"title\",",
        "detail": "user.admin.notification_admin",
        "documentation": {}
    },
    {
        "label": "OldAdmin",
        "kind": 6,
        "importPath": "user.admin.statistical_admin",
        "description": "user.admin.statistical_admin",
        "peekOfCode": "class OldAdmin(admin.ModelAdmin):\n    fieldsets = (\n        (\n            \"Total\",\n            {\n                \"fields\": (\n                    (\n                        \"total\",\n                        \"buyed_total\",\n                        \"ship_total\",",
        "detail": "user.admin.statistical_admin",
        "documentation": {}
    },
    {
        "label": "StatisticalAdmin",
        "kind": 6,
        "importPath": "user.admin.statistical_admin",
        "description": "user.admin.statistical_admin",
        "peekOfCode": "class StatisticalAdmin(admin.ModelAdmin):\n    change_list_template = 'admin/base_site.html'\n    def has_add_permission(self, request):\n        return False\n    def has_delete_permission(self, request, obj=None):\n        return False\n    def has_change_permission(self, request, obj=None):\n        return False\n    def changelist_view(self, request, extra_context=None):\n        try:",
        "detail": "user.admin.statistical_admin",
        "documentation": {}
    },
    {
        "label": "UserAdminForm",
        "kind": 6,
        "importPath": "user.admin.user_admin",
        "description": "user.admin.user_admin",
        "peekOfCode": "class UserAdminForm(forms.ModelForm):\n    user_permissions = forms.ModelMultipleChoiceField(\n        queryset=Permission.objects.all(),\n        widget=FilteredSelectMultiple(\"Permissions\", is_stacked=False),\n        required=False,\n    )\n    class Meta:\n        model = User\n        fields = \"__all__\"\nclass CustomerInline(admin.StackedInline):",
        "detail": "user.admin.user_admin",
        "documentation": {}
    },
    {
        "label": "CustomerInline",
        "kind": 6,
        "importPath": "user.admin.user_admin",
        "description": "user.admin.user_admin",
        "peekOfCode": "class CustomerInline(admin.StackedInline):\n    model = Customer\n    can_delete = False\n    verbose_name_plural = \"customer\"\n    fk_name = \"user\"\n    list_display = (\"user\", \"phone_number\", \"address\", \"date_of_birth\")\n    fieldsets = (\n        (\n            \"Statistics\",\n            {",
        "detail": "user.admin.user_admin",
        "documentation": {}
    },
    {
        "label": "BulkNotificationForm",
        "kind": 6,
        "importPath": "user.admin.user_admin",
        "description": "user.admin.user_admin",
        "peekOfCode": "class BulkNotificationForm(forms.Form):\n    title = forms.CharField(\n        max_length=255,\n        label=\"Title\"\n    )\n    content = forms.CharField(\n        widget=forms.Textarea(attrs={'rows': 4}), \n        label=\"Content\"\n    )\nclass UserAdmin(admin.ModelAdmin):",
        "detail": "user.admin.user_admin",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "user.admin.user_admin",
        "description": "user.admin.user_admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    form = UserAdminForm\n    inlines = [\n        CustomerInline,\n    ]\n    list_per_page = 20\n    list_display = (\n        \"email\",\n        \"first_name\",\n        \"last_name\",",
        "detail": "user.admin.user_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0001_initial",
        "description": "user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('password', models.CharField(max_length=128, verbose_name='password')),",
        "detail": "user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0002_customer",
        "description": "user.migrations.0002_customer",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('image', '0002_alter_image_image'),\n        ('user', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Customer',\n            fields=[\n                ('updated_at', models.DateTimeField(auto_now=True)),",
        "detail": "user.migrations.0002_customer",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0003_customer_total",
        "description": "user.migrations.0003_customer_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0002_customer'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='total',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "user.migrations.0003_customer_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0004_alter_customer_user",
        "description": "user.migrations.0004_alter_customer_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0003_customer_total'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='user',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL),\n        ),",
        "detail": "user.migrations.0004_alter_customer_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0005_customer_date_of_birth",
        "description": "user.migrations.0005_customer_date_of_birth",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0004_alter_customer_user'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='date_of_birth',\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "user.migrations.0005_customer_date_of_birth",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0006_remove_customer_selected_total",
        "description": "user.migrations.0006_remove_customer_selected_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0005_customer_date_of_birth'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='customer',\n            name='selected_total',\n        ),\n    ]",
        "detail": "user.migrations.0006_remove_customer_selected_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0007_remove_customer_money_total_customer_profit_total_and_more",
        "description": "user.migrations.0007_remove_customer_money_total_customer_profit_total_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0006_remove_customer_selected_total'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='customer',\n            name='money_total',\n        ),\n        migrations.AddField(",
        "detail": "user.migrations.0007_remove_customer_money_total_customer_profit_total_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0008_remove_user_groups",
        "description": "user.migrations.0008_remove_user_groups",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0007_remove_customer_money_total_customer_profit_total_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='user',\n            name='groups',\n        ),\n    ]",
        "detail": "user.migrations.0008_remove_user_groups",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0009_user_groups",
        "description": "user.migrations.0009_user_groups",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('user', '0008_remove_user_groups'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='groups',\n            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),",
        "detail": "user.migrations.0009_user_groups",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0010_customer_pending_total",
        "description": "user.migrations.0010_customer_pending_total",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0009_user_groups'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='pending_total',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "user.migrations.0010_customer_pending_total",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0011_alter_customer_buyed_total_and_more",
        "description": "user.migrations.0011_alter_customer_buyed_total_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0010_customer_pending_total'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='buyed_total',\n            field=models.BigIntegerField(default=0),\n        ),",
        "detail": "user.migrations.0011_alter_customer_buyed_total_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0012_alter_user_options_alter_customer_table_and_more",
        "description": "user.migrations.0012_alter_user_options_alter_customer_table_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0011_alter_customer_buyed_total_and_more'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='user',\n            options={},\n        ),\n        migrations.AlterModelTable(",
        "detail": "user.migrations.0012_alter_user_options_alter_customer_table_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0013_notificationcontent_notification",
        "description": "user.migrations.0013_notificationcontent_notification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0012_alter_user_options_alter_customer_table_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NotificationContent',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('content', models.TextField()),",
        "detail": "user.migrations.0013_notificationcontent_notification",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0014_statistical",
        "description": "user.migrations.0014_statistical",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0013_notificationcontent_notification'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Statistical',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('total', models.BigIntegerField(default=0)),",
        "detail": "user.migrations.0014_statistical",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0015_notification_title",
        "description": "user.migrations.0015_notification_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0014_statistical'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='notification',\n            name='title',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "user.migrations.0015_notification_title",
        "documentation": {}
    },
    {
        "label": "NotificationContent",
        "kind": 6,
        "importPath": "user.models.notification",
        "description": "user.models.notification",
        "peekOfCode": "class NotificationContent(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    content = models.TextField()\n    class Meta:\n        db_table = \"notification_content\"\nclass Notification(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    title = models.CharField(max_length=255, null=True, blank=True)\n    is_seen = models.BooleanField(default=False)",
        "detail": "user.models.notification",
        "documentation": {}
    },
    {
        "label": "Notification",
        "kind": 6,
        "importPath": "user.models.notification",
        "description": "user.models.notification",
        "peekOfCode": "class Notification(TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    title = models.CharField(max_length=255, null=True, blank=True)\n    is_seen = models.BooleanField(default=False)\n    content = models.ForeignKey(\n        NotificationContent, on_delete=models.SET_NULL, null=True, blank=True\n    )\n    def __str__(self) -> str:\n        return f\"{self.customer.user.first_name} {self.customer.user.last_name}\"",
        "detail": "user.models.notification",
        "documentation": {}
    },
    {
        "label": "TimeBase",
        "kind": 6,
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "peekOfCode": "class TimeBase(models.Model):\n    updated_at = models.DateTimeField(auto_now=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        abstract = True\nclass StatisticComplete:\n    def __init__(self, buyed_total, cancelled_total, returned_total):\n        self.buyed_total = buyed_total\n        self.cancelled_total = cancelled_total\n        self.returned_total = returned_total",
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "StatisticComplete",
        "kind": 6,
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "peekOfCode": "class StatisticComplete:\n    def __init__(self, buyed_total, cancelled_total, returned_total):\n        self.buyed_total = buyed_total\n        self.cancelled_total = cancelled_total\n        self.returned_total = returned_total\n    def __str__(self):\n        return f\"{self.buyed_total}, {self.cancelled_total}, {self.returned_total}\"\n    def get_total(self):\n        return self.buyed_total + self.cancelled_total + self.returned_total\nclass StatisticNonComplete:",
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "StatisticNonComplete",
        "kind": 6,
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "peekOfCode": "class StatisticNonComplete:\n    def __init__(self, pending_total, ship_total):\n        self.pending_total = pending_total\n        self.ship_total = ship_total\n    def __str__(self):\n        return f\"{self.pending_total}, {self.ship_total}\"\n    def get_total(self):\n        return self.pending_total + self.ship_total\nclass StatisticMoney:\n    def __init__(self, revenue_total, profit_total):",
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "StatisticMoney",
        "kind": 6,
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "peekOfCode": "class StatisticMoney:\n    def __init__(self, revenue_total, profit_total):\n        self.revenue_total = revenue_total\n        self.profit_total = profit_total\n    def __str__(self):\n        return f\"{self.revenue_total}, {self.profit_total}\"\n    def get_total(self):\n        return self.revenue_total + self.profit_total\n    class Meta:\n        abstract = True",
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "kind": 6,
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "peekOfCode": "class Statistics(models.Model):\n    total = models.BigIntegerField(default=0)\n    buyed_total = models.BigIntegerField(default=0)\n    cancelled_total = models.BigIntegerField(default=0)\n    returned_total = models.BigIntegerField(default=0)\n    pending_total = models.BigIntegerField(default=0)\n    ship_total = models.BigIntegerField(default=0)\n    revenue_total = models.BigIntegerField(default=0)\n    profit_total = models.BigIntegerField(default=0)\n    @property",
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "Statistical",
        "kind": 6,
        "importPath": "user.models.statistical",
        "description": "user.models.statistical",
        "peekOfCode": "class Statistical(Statistics):\n    def update_total(self):\n        from inventory.models import Agency\n        agencies = Agency.objects.all().aggregate(\n            sum_total=Sum(\"total\"),\n            sum_buyed_total=Sum(\"buyed_total\"),\n            sum_ship_total=Sum(\"ship_total\"),\n            sum_pending_total=Sum(\"pending_total\"),\n            sum_cancelled_total=Sum(\"cancelled_total\"),\n            sum_returned_total=Sum(\"returned_total\"),",
        "detail": "user.models.statistical",
        "documentation": {}
    },
    {
        "label": "CustomerInfo",
        "kind": 6,
        "importPath": "user.models.user",
        "description": "user.models.user",
        "peekOfCode": "class CustomerInfo:\n    def __init__(self, phone_number, address, date_of_birth):\n        self.phone_number = phone_number\n        self.address = address\n        self.date_of_birth = date_of_birth\n    def __str__(self):\n        return f\"{self.phone_number}, {self.address}, {self.date_of_birth}\"\nclass UserManager(BaseUserManager):\n    \"\"\"Define a model manager for User model with no username field.\"\"\"\n    use_in_migrations = True",
        "detail": "user.models.user",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "user.models.user",
        "description": "user.models.user",
        "peekOfCode": "class UserManager(BaseUserManager):\n    \"\"\"Define a model manager for User model with no username field.\"\"\"\n    use_in_migrations = True\n    def _create_user(self, email, password, **extra_fields):\n        \"\"\"Create and save a User with the given email and password.\"\"\"\n        if not email:\n            raise ValueError(\"The given email must be set\")\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)\n        user.set_password(password)",
        "detail": "user.models.user",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "user.models.user",
        "description": "user.models.user",
        "peekOfCode": "class User(AbstractUser, TimeBase):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    username = None\n    # groups = None\n    email = models.EmailField(\"Email address\", unique=True)\n    USERNAME_FIELD = \"email\"\n    REQUIRED_FIELDS = []\n    objects = UserManager()\n    def __str__(self):\n        return f\"{self.email} {self.first_name} {self.last_name}\"",
        "detail": "user.models.user",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "user.models.user",
        "description": "user.models.user",
        "peekOfCode": "class Customer(TimeBase, Statistics):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name=\"customer\")\n    avatar = models.ForeignKey(\n        Image, on_delete=models.SET_NULL, null=True, blank=True, related_name=\"avatar\"\n    )\n    phone_number = models.CharField(max_length=10)\n    address = models.TextField(null=True, blank=True)\n    date_of_birth = models.DateField(null=True, blank=True)\n    @property",
        "detail": "user.models.user",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "user.apps",
        "description": "user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'user'",
        "detail": "user.apps",
        "documentation": {}
    },
    {
        "label": "IsStaffUser",
        "kind": 6,
        "importPath": "user.permissions",
        "description": "user.permissions",
        "peekOfCode": "class IsStaffUser(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user.is_staff\n    def has_object_permission(self, request, view, obj):\n        return request.user.is_staff\nclass IsStaffOrAdmin(permissions.BasePermission):\n    def has_permission(self, request, view):\n        try:\n            return request.user.is_staff or request.user.is_superuser\n        except:",
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "IsStaffOrAdmin",
        "kind": 6,
        "importPath": "user.permissions",
        "description": "user.permissions",
        "peekOfCode": "class IsStaffOrAdmin(permissions.BasePermission):\n    def has_permission(self, request, view):\n        try:\n            return request.user.is_staff or request.user.is_superuser\n        except:\n            return False\n    def has_object_permission(self, request, view, obj):\n        try:\n            return request.user.is_staff or request.user.is_superuser\n        except:",
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdmin",
        "kind": 6,
        "importPath": "user.permissions",
        "description": "user.permissions",
        "peekOfCode": "class IsAdmin(permissions.BasePermission):\n    def has_permission(self, request, view):\n        try:\n            return request.user.is_superuser\n        except:\n            return False\n    def has_object_permission(self, request, view, obj):\n        try:\n            return request.user.is_superuser\n        except:",
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "IsActiveUser",
        "kind": 6,
        "importPath": "user.permissions",
        "description": "user.permissions",
        "peekOfCode": "class IsActiveUser(permissions.BasePermission):\n    def has_permission(self, request, view):\n        try:\n            return request.user.is_active\n        except:\n            return False\n    def has_object_permission(self, request, view, obj):\n        try:\n            return request.user.is_active\n        except:",
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "user.permissions",
        "description": "user.permissions",
        "peekOfCode": "logger = logging.getLogger(\"file\")\nclass IsStaffUser(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user.is_staff\n    def has_object_permission(self, request, view, obj):\n        return request.user.is_staff\nclass IsStaffOrAdmin(permissions.BasePermission):\n    def has_permission(self, request, view):\n        try:\n            return request.user.is_staff or request.user.is_superuser",
        "detail": "user.permissions",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "kind": 6,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "class CustomerSerializer(serializers.ModelSerializer):\n    email = serializers.EmailField(source=\"user.email\")\n    password = serializers.CharField(source=\"user.password\", write_only=True, max_length=128)\n    first_name = serializers.CharField(source=\"user.first_name\", max_length=255, required=False)\n    last_name = serializers.CharField(source=\"user.last_name\", max_length=255, required=False)\n    is_superuser = serializers.BooleanField(source=\"user.is_superuser\", read_only=True)\n    phone_number = serializers.CharField(required=False)\n    avatar_url = serializers.ImageField(source=\"avatar.image\", max_length=None, allow_empty_file=True, required=False, use_url=True)\n    new_password = serializers.CharField(write_only=True, max_length=128, required=False)\n    class Meta:",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "NotificationSerializer",
        "kind": 6,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "class NotificationSerializer(serializers.ModelSerializer):\n    content = serializers.SerializerMethodField()\n    class Meta:\n        model = Notification\n        fields = ['id', 'title', 'content', 'is_seen', 'created_at']\n    def get_content(self, obj):\n        return obj.content.content if obj.content else None",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "user.urls",
        "description": "user.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r\"customers\", CustomerViewSet, basename=\"customers\")\nurlpatterns = [\n    path(\"\", include(router.urls))\n]",
        "detail": "user.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "user.urls",
        "description": "user.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(router.urls))\n]",
        "detail": "user.urls",
        "documentation": {}
    },
    {
        "label": "CustomerViewSet",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class CustomerViewSet(ModelViewSet):\n    serializer_class = CustomerSerializer\n    pagination_class = StandardPageNumberPagination\n    filter_backends = [filters.SearchFilter]\n    search_fields = [\n        \"user__first_name\",\n        \"user__last_name\",\n        \"user__email\",\n        \"user__active\",\n    ]",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "NotificationViewSet",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class NotificationViewSet(viewsets.ModelViewSet):\n    serializer_class = NotificationSerializer\n    permission_classes = [IsActiveUser]\n    def get_queryset(self):\n        return Notification.objects.filter(\n            customer__user=self.request.user\n        ).select_related('content').order_by('-created_at')\n    @action(detail=True, methods=['patch'])\n    def mark_as_read(self, request, pk=None):\n        notification = self.get_object()",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"ecommerce.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]